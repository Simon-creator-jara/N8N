services:

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
    volumes:
      - ./deployment/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./deployment/nginx/proxy_headers.conf:/etc/nginx/proxy_headers.conf:ro
    networks:
      - n8n-local

  redis:
    image: redis:alpine
    command: >
      sh -lc 'redis-server /usr/local/etc/redis/redis.conf
              --port 6389 --bind 0.0.0.0 --protected-mode no
              --requirepass "$REDIS_PASSWORD"'
    ports:
      - "6389:6389"
    expose:
      - 6389
    volumes:
      # - redis_data:/data
      - ./deployment/redis/redis.conf:/usr/local/etc/redis/redis.conf:ro
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD:-password}
    healthcheck:
      test:   ["CMD", "redis-cli", "-a", "${REDIS_PASSWORD:-password}", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5
    restart: always
    networks:
      - n8n-local
 
  db2:
    image: postgres
    restart: always
    ports:
      - 5433:5433
    expose:
      - 5433
    command: ["postgres","-c","port=5433"]
    volumes:
      # - postgres_data:/var/lib/postgresql/data
      - ./deployment/postgresql/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    environment:
      - POSTGRES_DB=postgres-db
      - POSTGRES_USER=postgres-user
      - POSTGRES_PASSWORD=postgres-pass
      - POSTGRES_INITDB_ARGS=--auth-host=scram-sha-256 --auth-local=scram-sha-256
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres-user -d postgres-db -p 5433"]
      interval: 5s
      timeout: 3s
      retries: 5
    networks:
      - n8n-local
 
 
  n8n-main:
    image: docker.n8n.io/n8nio/n8n
    ports:
      - "5678:5678"
    #volumes:
      #- n8n_data:/home/node/.n8n
    expose: 
      - 5678
    environment:
      # --- Instance Configuration ---
      - N8N_INSTANCE_TYPE=main
      - EXECUTIONS_MODE=queue
      - OFFLOAD_MANUAL_EXECUTIONS_TO_WORKERS=true
      - N8N_PROTOCOL=http
      - N8N_ENCRYPTION_KEY=your-encryption-key # CHANGE THIS!

      # --- PostgreSQL Configuration ---
      - DB_TYPE=postgresdb
      - DB_POSTGRESDB_HOST=db2
      - DB_POSTGRESDB_PORT=5433
      - DB_POSTGRESDB_DATABASE=postgres-db
      - DB_POSTGRESDB_USER=postgres-user
      - DB_POSTGRESDB_PASSWORD=postgres-pass
      - DB_POSTGRESDB_SCHEMA=public

      # --- Redis Configuration ---
      - QUEUE_BULL_REDIS_HOST=redis
      - QUEUE_BULL_REDIS_PORT=6379
      - QUEUE_BULL_REDIS_PASSWORD=${REDIS_PASSWORD:-password}
      - QUEUE_HEALTH_CHECK_ACTIVE=true

      # --- Logging & Monitoring ---
      - N8N_LOG_LEVEL=debug
      - N8N_LOG_OUTPUT=console
      - N8N_METRICS=true
      - N8N_PATH=/n8n/n8n-main/v1/
      - N8N_ENDPOINT_REST=n8n/n8n-main/v1/rest
      - N8N_ENDPOINT_MCP=n8n/n8n-main/v1/mcp
      - N8N_ENDPOINT_MCP=n8n/n8n-main/v1/mcp
      - N8N_EDITOR_BASE_URL=http://localhost/n8n/n8n-main/v1/
      - WEBHOOK_URL=http://localhost/n8n/n8n-main/v1/
      - N8N_HOST=localhost

    depends_on:
      db2:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - n8n-local
    volumes:
      - ./deployment/n8n_data/custom/node_modules:/home/node/.n8n/custom/node_modules/custom_nodes
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "curl  http://localhost:5678/healthz | grep -q '\"status\":\"ok\"' || exit 1"]
      interval: 5s
      timeout: 2s
      retries: 5
      start_period: 90s


  n8n-worker:
    image: docker.n8n.io/n8nio/n8n
    ports:
      - "5679:5678"
    #volumes:
      #- n8n_data:/home/node/.n8n
    expose: 
      - 5679
    environment:
      # --- Instance Configuration ---
      - N8N_INSTANCE_TYPE=worker
      - EXECUTIONS_MODE=queue
      - OFFLOAD_MANUAL_EXECUTIONS_TO_WORKERS=true
      - N8N_PROTOCOL=http
      - N8N_ENCRYPTION_KEY=your-encryption-key # CHANGE THIS!

      # --- PostgreSQL Configuration ---
      - DB_TYPE=postgresdb
      - DB_POSTGRESDB_HOST=db2
      - DB_POSTGRESDB_PORT=5433
      - DB_POSTGRESDB_DATABASE=postgres-db
      - DB_POSTGRESDB_USER=postgres-user
      - DB_POSTGRESDB_PASSWORD=postgres-pass
      - DB_POSTGRESDB_SCHEMA=public

      # --- Redis Configuration ---
      - QUEUE_BULL_REDIS_HOST=redis
      - QUEUE_BULL_REDIS_PORT=6379
      - QUEUE_BULL_REDIS_PASSWORD=${REDIS_PASSWORD:-password}
      - QUEUE_HEALTH_CHECK_ACTIVE=true

      # --- Logging & Monitoring ---
      - N8N_LOG_LEVEL=debug
      - N8N_LOG_OUTPUT=console
      - N8N_METRICS=true
      - N8N_PATH=/n8n/n8n-main/v1/
      - N8N_ENDPOINT_REST=n8n/n8n-main/v1/rest
      - N8N_ENDPOINT_MCP=n8n/n8n-main/v1/mcp
      - N8N_ENDPOINT_MCP=n8n/n8n-main/v1/mcp
      - N8N_EDITOR_BASE_URL=http://localhost/n8n/n8n-main/v1/
      - WEBHOOK_URL=http://localhost/n8n/n8n-main/v1/
      - N8N_HOST=localhost
    command: worker --concurrency=5
    depends_on:
      db2:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - n8n-local
    volumes:
      - ./deployment/n8n_data/custom/node_modules:/home/node/.n8n/custom/node_modules/custom_nodes
 
networks:
  n8n-local:
    name: n8n-local