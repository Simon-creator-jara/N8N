steps:
  - task: NodeTool@0
    displayName: 'Change to node 20 version '
    inputs:
      versionSpec: '20.x'

  - task: Npm@1
    displayName: "npm cache clean"
    inputs:
      command: custom
      workingDir: "$(System.DefaultWorkingDirectory)/$(component-name)"
      verbose: false
      customCommand: "cache clean --force"

  - task: Npm@1
    displayName: " node_monpm install - restoredules"
    inputs:
      workingDir: "$(System.DefaultWorkingDirectory)/$(component-name)"
      verbose: true
      customEndpoint: "npm-bancolombia"

  - task: Npm@1
    displayName: "Unit Test"
    inputs:
      command: custom
      workingDir: "$(System.DefaultWorkingDirectory)/$(component-name)"
      verbose: false
      customCommand: "run test:cov"
      customEndpoint: "npm-bancolombia"

  - task: PublishTestResults@2
    displayName: "Publish Test Results $(System.DefaultWorkingDirectory)/$(component-name)/junit.xml"
    inputs:
      testResultsFiles: "$(System.DefaultWorkingDirectory)/$(component-name)/coverage/junit.xml"
      searchFolder: "$(System.DefaultWorkingDirectory)/$(component-name)"
    condition: succeeded()

  - task: SonarQubePrepare@7
    displayName: Prepare analysis on SonarQube
    inputs:
        SonarQube: SonarQube
        scannerMode: CLI
        configMode: manual
        cliProjectKey: '$(Build.Repository.Name)_$(component-name)'
        cliProjectName: '$(Build.Repository.Name)_$(component-name)'
        cliProjectVersion: '$(Build.BuildNumber)'
        cliSources: $(component-name)
        extraProperties: |
            sonar.projectBaseDir=$(System.DefaultWorkingDirectory)/$(component-name)
            sonar.sources=.
            sonar.exclusions=**/node_modules/**,**/pipelines/**,**/*.yml,**/coverage/**,**/reports/**,**/*.js,**/src/__mocks__/**,**/e2e/**,**/tests/**,**/dist/**,**/setup-jest.ts,**/jest.config.js,**/projects/olympus-kit/*.ts,**/projects/showcase/**,**/projects/showcase/*.ts,**/projects/*.ts
            sonar.tests=$(System.DefaultWorkingDirectory)/$(component-name)/nodes
            sonar.test.inclusions=**/*.spec.ts
            sonar.testExecutionReportPaths=coverage/sonar-report.xml
            sonar.coverage.exclusions=test/**,*.test.ts,**/*.test.ts,*.spec.ts,__tests__/**
            sonar.sourceEncoding=UTF-8
            sonar.typescript.lcov.reportPaths=$(System.DefaultWorkingDirectory)/$(component-name)/coverage/lcov.info

  - task: SonarQubeAnalyze@7
    displayName: "Run Code Analysis"

  - task: sonar-buildbreaker@8
    displayName: "Break if failure QualityGate in Sonar"
    inputs:
      SonarQube: "SonarQube"

  - task: PublishCodeCoverageResults@1
    displayName: "Publish code coverage"
    inputs:
      codeCoverageTool: Cobertura
      summaryFileLocation: "$(System.DefaultWorkingDirectory)/$(component-name)/coverage/cobertura-coverage.xml"
      reportDirectory: "$(System.DefaultWorkingDirectory)/$(component-name)/coverage/"
    env:
      DISABLE_COVERAGE_AUTOGENERATE: true

  - task: Npm@1
    displayName: "ng build library"
    inputs:
      command: custom
      workingDir: "$(System.DefaultWorkingDirectory)/$(component-name)"
      verbose: false
      customCommand: 'run build'
      customEndpoint: 'npm-bancolombia'
    continueOnError: false

  - task: Npm@1
    displayName: "npm pack"
    inputs:
      command: custom
      workingDir: "$(System.DefaultWorkingDirectory)/$(component-name)"
      verbose: false
      customCommand: 'run pack'
      customEndpoint: 'npm-bancolombia'
    continueOnError: false

  - script: |
      cd $(System.DefaultWorkingDirectory)/$(component-name)/
      ls -laR .
    displayName: 'List dist folder'