import { regions } from '../nodes/AWS/types';
import { INodeProperties } from 'n8n-workflow';


export const AWSSecretsProperties: INodeProperties[] = [
  {
    displayName: 'AWS Region',
    name: 'region',
    type: 'options',
    options: regions.map((r) => ({
      name: `${r.displayName} (${r.location}) - ${r.name}`,
      value: r.name,
    })),
    default: 'us-east-1',
    description: 'The AWS region where the secret is stored',
  },
  {
    displayName: 'AWS Authentication Method',
    name: 'awsAuthenticationMethod',
    type: 'options',
    options: [
      {
        name: 'N8N Role',
        value: 'n8nRole',
        description: 'Use the role assigned to the n8n instance',
      },
      {
        name: 'Assume a Role',
        value: 'assumeRole',
        description: 'Assume a specific role using its ARN',
      },
      {
        name: 'Access Keys',
        value: 'accessKeys',
        description: 'Use an Access Key ID and Secret Access Key',
      },
    ],
    default: 'n8nRole',
  },
  {
    displayName: 'Role ARN',
    name: 'roleArn',
    type: 'string',
    default: '',
    displayOptions: {
      show: {
        awsAuthenticationMethod: ['assumeRole'],
      },
    },
    description: 'The ARN of the role to assume',
    required: true,
  },
  {
    displayName: 'Access Key ID',
    name: 'accessKeyId',
    type: 'string',
    default: '',
    displayOptions: {
      show: {
        awsAuthenticationMethod: ['accessKeys'],
      },
    },
    required: true,
  },
  {
    displayName: 'Secret Access Key',
    name: 'secretAccessKey',
    type: 'string',
    typeOptions: {
      password: true,
    },
    displayOptions: {
      show: {
        awsAuthenticationMethod: ['accessKeys'],
      },
    },
    default: '',
    required: true,
  },
  {
    displayName: 'Session Token',
    name: 'sessionToken',
    type: 'string',
    typeOptions: {
      password: true,
    },
    displayOptions: {
      show: {
        awsAuthenticationMethod: ['accessKeys'],
      },
    },
    default: '',
    description:
      'The session token to use for temporary credentials, Only required if you are using temporary credentials',
  },
  {
    displayName: 'AWS Secret Keys Values',
    name: 'awsSecretKeysValue',
    description: 'Secrets Retrieved from AWS Secrets Manager',
    type: 'hidden',
    typeOptions: {
      expirable: true,
    },
    default: ''
  }
];
