# nginx.conf
user  nginx;
worker_processes  1;
error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;
http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;
    sendfile       on;

    map $http_upgrade $connection_upgrade {
        default upgrade;
        ''      close;
    }

    # — upstream to your n8n container —
    upstream n8n {
        server host.docker.internal:5678;
    }

    server {
        listen 80;
        server_name host.docker.internal:5678;


        location ~ ^/n8n/n8n-main/v1(?:/(.*))?$ {
            # $1 == "ruta/tras/v1" o vacío si no hay nada
            proxy_pass http://n8n/$1$is_args$args;
            proxy_http_version 1.1;

            # WebSocket support:
            proxy_set_header Upgrade           $http_upgrade;
            proxy_set_header Connection        $connection_upgrade;

            # Host/origin headers if needed:
            proxy_set_header Host              n8n;
            proxy_set_header Origin            n8n;

            # Real client IP:
            proxy_set_header X-Real-IP         $remote_addr;
            proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
        }
        location ~ ^/n8n/n8n-main/v1/rest(?:/(.*))?$ {
            # $1 == "ruta/tras/v1" o vacío si no hay nada
            proxy_pass http://n8n/$1$is_args$args;
            proxy_http_version 1.1;

            # WebSocket support:
            proxy_set_header Upgrade           $http_upgrade;
            proxy_set_header Connection        $connection_upgrade;

            # Host/origin headers if needed:
            proxy_set_header Host              n8n;
            proxy_set_header Origin            n8n;

            # Real client IP:
            proxy_set_header X-Real-IP         $remote_addr;
            proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
        }

}
}

events {
    worker_connections  1024;
}
